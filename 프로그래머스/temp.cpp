#include <iostream>

using namespace std;

const char segments[10][5][4] = {

    {// 1
     {' ', ' ', ' ', '1'},
     {' ', ' ', ' ', '1'},
     {' ', ' ', ' ', '1'},
     {' ', ' ', ' ', '1'},
     {' ', ' ', ' ', '1'}},
    {// 2
     {'2', '2', '2', '2'},
     {' ', ' ', ' ', '2'},
     {'2', '2', '2', '2'},
     {'2', ' ', ' ', ' '},
     {'2', '2', '2', '2'}},
    {// 3
     {'3', '3', '3', '3'},
     {' ', ' ', ' ', '3'},
     {'3', '3', '3', '3'},
     {' ', ' ', ' ', '3'},
     {'3', '3', '3', '3'}},
    {// 4
     {'4', ' ', ' ', '4'},
     {'4', ' ', ' ', '4'},
     {'4', '4', '4', '4'},
     {' ', ' ', ' ', '4'},
     {' ', ' ', ' ', '4'}},
    {// 5
     {'5', '5', '5', '5'},
     {'5', ' ', ' ', ' '},
     {'5', '5', '5', '5'},
     {' ', ' ', ' ', '5'},
     {'5', '5', '5', '5'}},
    {// 6
     {'6', '6', '6', '6'},
     {'6', ' ', ' ', ' '},
     {'6', '6', '6', '6'},
     {'6', ' ', ' ', '6'},
     {'6', '6', '6', '6'}},
    {// 7
     {'7', '7', '7', '7'},
     {' ', ' ', ' ', '7'},
     {' ', ' ', ' ', '7'},
     {' ', ' ', ' ', '7'},
     {' ', ' ', ' ', '7'}},
    {// 8
     {'8', '8', '8', '8'},
     {'8', ' ', ' ', '8'},
     {'8', '8', '8', '8'},
     {'8', ' ', ' ', '8'},
     {'8', '8', '8', '8'}},
    {// 9
     {'9', '9', '9', '9'},
     {'9', ' ', ' ', '9'},
     {'9', '9', '9', '9'},
     {' ', ' ', ' ', '9'},
     {' ', ' ', ' ', '9'}},
};

void printDigit(int digit)
{

    for (int y = 0; y < 5; y++)
    {
        for (int x = 0; x < 4; x++)
        {
            cout << segments[digit - 1][y][x];
        }
        cout << endl;
    }
    cout << endl;
}

int digitcheck(int digit)
{
    int count = 0;
    while (digit != 0)
    {
        count++;
        digit /= 10;
    }
    return count;
}

int pow(int num) // 제곱
{
    int result = 1;
    for (int i = 1; i < num; i++)
    {
        result *= 10;
    }
    return result;
}
int main()
{
    int input;
    cin >> input;

    for (int i = digitcheck(input); i > 0; i--)
    {
        int temp = input / pow(i);
        input %= pow(i);
        printDigit(temp);
    }
    return 0;
}